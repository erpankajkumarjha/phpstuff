/*
=============================================== PDO ==========================================
PDO is a PHP extension to formalise PHP's database connections by creating a uniform interface. 
This allows developers to create code which is portable across many databases and platforms. 


Important Note: There isn't any PDO::PARAM for decimals / floats, you'll have to use PDO::PARAM_STR.

*/

$hostname = 'localhost';
$username = 'root';
$password = 'root';
$database= 'pdo_test';


=============================================== To Insert Data in Database =================================

  try {
  	$user="YYYYYYYY"; $pass="xxxxxxxxxx";
  	
  	 /*** Open the database connection ***/
      $dbh = new PDO("mysql:host=$hostname; dbname=$database", $username, $password);
      echo 'Connected to database';
      
     /*** set the error reporting attribute ***/
      $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
      
     /*** prepare the SQL statement ***/
      $stmt = $dbh->prepare("Insert into users(username,password) values(:username, :password)");
  
     /*** bind the paramaters ***/
      $stmt->bindParam(':username', $user, PDO::PARAM_STR);
      $stmt->bindParam(':password', $pass, PDO::PARAM_STR, 5);
  
      /*** execute the prepared statement ***/
      $stmt->execute();
      
      /*** close the database connection ***/
      $dbh = null;
      
      }
  catch(PDOException $e)
      {
      echo $e->getMessage();
      }
      

=============================================== To Fetch Data from Database =================================

       try {
  	   $firstname="YYYYYYYY"; $usertype="xxxxxxxxxx";
  	
  	 /*** Open the database connection ***/
      $dbh = new PDO("mysql:host=$hostname; dbname=$database", $username, $password);
      echo 'Connected to database';
      
     /*** set the error reporting attribute ***/
      $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
      
     /*** prepare the SQL statement ***/
      $stmt = $dbh->prepare("SELECT * from users WHERE firstname = ? AND usertype= ? ");
  

     /*** bind the paramaters ***/
      $stmt->bindParam('?', $firstname, PDO::PARAM_STR);
      $stmt->bindParam('?', $usertype, PDO::PARAM_STR, 5);
  
      /*** execute the prepared statement ***/
      $stmt->execute();
      
      $stmt->setFetchMode(PDO::FETCH_BOTH);

      // fetch
      while($row = $stmt->fetch()){
        print_r($row);
      }

      
      /*** close the database connection ***/
      $dbh = null;
      
      }
  catch(PDOException $e)
      {
      echo $e->getMessage();
      }
      
      
  =============================================== To Update Data in Database =================================

      try {
  	   $firstname="YYYYYYYY"; $lastname="xxxxxxxxxx",  $userId=1201;
  	
  	 /*** Open the database connection ***/
      $dbh = new PDO("mysql:host=$hostname; dbname=$database", $username, $password);
      echo 'Connected to database';
      
     /*** set the error reporting attribute ***/
      $dbh->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
      
     /*** prepare the SQL statement ***/
      $stmt = $dbh->prepare("UPDATE users set firstname = ? AND lastname= ? WHERE id= ? ");
  

     /*** bind the paramaters ***/
      $stmt->bindParam('?', $firstname, PDO::PARAM_STR);
      $stmt->bindParam('?', $lastname, PDO::PARAM_STR, 5);
      $stmt->bindParam('?', $userId, PDO::PARAM_INT);
  
      /*** execute the prepared statement ***/
      $stmt->execute();
      
      /*** close the database connection ***/
      $dbh = null;
      
      }
  catch(PDOException $e)
      {
      echo $e->getMessage();
      }
      
